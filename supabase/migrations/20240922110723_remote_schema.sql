

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";






COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";






CREATE OR REPLACE FUNCTION "public"."handle_new_user"() RETURNS "trigger"
    LANGUAGE "plpgsql" SECURITY DEFINER
    SET "search_path" TO 'public'
    AS $$
begin
  insert into public.Users (id, first_name, last_name, email)
  values (new.id, new.raw_user_meta_data ->> 'first_name', new.raw_user_meta_data ->> 'last_name', new.raw_user_meta_data ->> 'email');
  return new;
end;
$$;


ALTER FUNCTION "public"."handle_new_user"() OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."Stocks" (
    "stockID" bigint NOT NULL,
    "Date" timestamp with time zone NOT NULL,
    "OpenPrice" bigint,
    "ClosePrice" bigint,
    "HighPrice" bigint,
    "LowPrice" bigint,
    "symbolID" bigint
);


ALTER TABLE "public"."Stocks" OWNER TO "postgres";


ALTER TABLE "public"."Stocks" ALTER COLUMN "stockID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Stocks_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."Symbols" (
    "symbolID" bigint NOT NULL,
    "Symbol" "text" NOT NULL,
    "Name" "text"
);


ALTER TABLE "public"."Symbols" OWNER TO "postgres";


ALTER TABLE "public"."Symbols" ALTER COLUMN "symbolID" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Symbols_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."Users" (
    "id" "uuid" NOT NULL,
    "first_name" "text",
    "last_name" "text",
    "email" "text",
    "stock_ids" "json",
    "created" timestamp with time zone DEFAULT "now"(),
    "avatar_url" "text"
);


ALTER TABLE "public"."Users" OWNER TO "postgres";


ALTER TABLE ONLY "public"."Stocks"
    ADD CONSTRAINT "Stocks_pkey" PRIMARY KEY ("stockID");



ALTER TABLE ONLY "public"."Symbols"
    ADD CONSTRAINT "Symbols_pkey" PRIMARY KEY ("symbolID");



ALTER TABLE ONLY "public"."Users"
    ADD CONSTRAINT "Users_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."Stocks"
    ADD CONSTRAINT "Stocks_symbolID_fkey" FOREIGN KEY ("symbolID") REFERENCES "public"."Symbols"("symbolID");



ALTER TABLE ONLY "public"."Stocks"
    ADD CONSTRAINT "Stocks_symbolID_fkey1" FOREIGN KEY ("symbolID") REFERENCES "public"."Symbols"("symbolID");



ALTER TABLE ONLY "public"."Users"
    ADD CONSTRAINT "Users_id_fkey" FOREIGN KEY ("id") REFERENCES "auth"."users"("id") ON DELETE CASCADE;



CREATE POLICY "Public profiles are viewable by everyone." ON "public"."Users" FOR SELECT USING (true);



ALTER TABLE "public"."Stocks" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."Symbols" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."Users" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "Users can insert their own profile." ON "public"."Users" FOR INSERT WITH CHECK ((( SELECT "auth"."uid"() AS "uid") = "id"));



CREATE POLICY "Users can update own profile." ON "public"."Users" FOR UPDATE USING ((( SELECT "auth"."uid"() AS "uid") = "id"));





ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";
































































































































































































GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "anon";
GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "service_role";





















GRANT ALL ON TABLE "public"."Stocks" TO "anon";
GRANT ALL ON TABLE "public"."Stocks" TO "authenticated";
GRANT ALL ON TABLE "public"."Stocks" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Stocks_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Stocks_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Stocks_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."Symbols" TO "anon";
GRANT ALL ON TABLE "public"."Symbols" TO "authenticated";
GRANT ALL ON TABLE "public"."Symbols" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Symbols_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Symbols_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Symbols_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."Users" TO "anon";
GRANT ALL ON TABLE "public"."Users" TO "authenticated";
GRANT ALL ON TABLE "public"."Users" TO "service_role";



ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
